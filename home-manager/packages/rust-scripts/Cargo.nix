# Generated by carnix 0.7.2: carnix nix --src .
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  rust_scripts = f: rust_scripts_0_1_0 { features = rust_scripts_0_1_0_features { rust_scripts_0_1_0 = f; }; };
  __all = [ (rust_scripts {}) ];
  aho_corasick_0_6_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.6";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0ap5lv1q6ylmzq70bjgg66dsa6p9926gwv2q4z0chfjnii8hczq8";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "137pjkcn89b7fqk78w65ggj92pynmf1hkr1sjz53aga4b50lkmwm";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_23_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.23";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0sx7h7bl5j5dj4hlk7bcf8fwbhrxrvq2hfpy70vw2140gnlrl9dw";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  base64_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.1.1";
    authors = [ "Alice Maz <alice@alicemaz.com>" ];
    sha256 = "1c1lfggka8g0cifs4h62d0gl07fz6wacw5hma7j6063wcks0ging";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.4.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0an03kibhfcc0mcxf6a0mvbab0s7cggnvflw8jn0b15i351h828c";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "162p4w4h1ad76awq6b5yivmls3d50m9cl27d8g588lsps6g8s5rw";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_18_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.18";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0wcnpa54qvm5921wwrrkn8cwxd5y0p5f4gb1qgyh5imii7rdhpjx";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.4";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0n5baxk53dvqjymzwynq55wb805b24390qx1n16zi8fjzq90j7k4";
    inherit dependencies buildDependencies features;
  };
  chrono_0_4_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "chrono";
    version = "0.4.4";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" "Brandon W Maister <quodlibetor@gmail.com>" ];
    sha256 = "169h5rlrb9df3yvnzihjw39cjipvz90qgf9211pivms2s9xnpqpr";
    inherit dependencies buildDependencies features;
  };
  derive_builder_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "derive_builder";
    version = "0.5.1";
    authors = [ "Colin Kiegel <kiegel@gmx.de>" "Pascal Hertleif <killercup@gmail.com>" "Jan-Erik Rediger <janerik@fnordig.de>" "Ted Driggs <ted.driggs@outlook.com>" ];
    sha256 = "0w4k4k5g4lfrhzzzqxi9zp4x8m889kg0z36wvbxi9xxgcfy3az8n";
    procMacro = true;
    build = "build/mod.rs";
    inherit dependencies buildDependencies features;
  };
  derive_builder_core_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "derive_builder_core";
    version = "0.2.0";
    authors = [ "Colin Kiegel <kiegel@gmx.de>" "Pascal Hertleif <killercup@gmail.com>" "Jan-Erik Rediger <janerik@fnordig.de>" "Ted Driggs <ted.driggs@outlook.com>" ];
    sha256 = "14kggzaggy6ra7q88cilyriy3ji4bin5favq6qd1z9vl9nvafgs9";
    inherit dependencies buildDependencies features;
  };
  dialog_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dialog";
    version = "0.1.0";
    authors = [ "Malte Brandy <malte.brandy@maralorn.de>" ];
    src = fetchgit {
       url = "https://git.darmstadt.ccc.de/maralorn/dialog-rs.git";
       rev = "ebada0712e5c0e55d2a3447907a8065aa8c600af";
       sha256 = "081w7rs9v2225963d5rbl352w3d6lz965yd7v63p9awcnfk48kni";
    };
    inherit dependencies buildDependencies features;
  };
  dtoa_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa";
    version = "0.4.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1xysdxdm24sk5ysim7lps4r2qaxfnj0sbakhmps4d42yssx30cw8";
    inherit dependencies buildDependencies features;
  };
  encode_unicode_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encode_unicode";
    version = "0.1.3";
    authors = [ "Torbj√∏rn Birch Moltu <t.b.moltu@lyse.net>" ];
    sha256 = "1avvnhi4cy8vj0j0yjqpwxjz0kbjk3nx5k82rq70nr0fsa4ag73f";
    inherit dependencies buildDependencies features;
  };
  encoding_0_2_33_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding";
    version = "0.2.33";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "16ls6avhv5ll28zajl5q1jbiz1g80c4ygnw13zzqmij14wsp5329";
    inherit dependencies buildDependencies features;
  };
  encoding_index_japanese_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-japanese";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "1pmfaabps0x6v6cd4fbk9ssykhkmc799dma2y78fhk7gvyr5gyl4";
    libPath = "lib.rs";
    libName = "encoding_index_japanese";
    inherit dependencies buildDependencies features;
  };
  encoding_index_korean_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-korean";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "1b756n7gcilkx07y7zjrikcg0b8v8yd6mw8w01ji8sp3k1cabcf2";
    libPath = "lib.rs";
    libName = "encoding_index_korean";
    inherit dependencies buildDependencies features;
  };
  encoding_index_simpchinese_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-simpchinese";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0rb4xd8cqymhqffqqxdk18mf9n354vs50ar66jrysb1z6ymcvvpy";
    libPath = "lib.rs";
    libName = "encoding_index_simpchinese";
    inherit dependencies buildDependencies features;
  };
  encoding_index_singlebyte_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-singlebyte";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "07df3jrfwfmzi2s352lvcpvy5dqpy2s45d2xx2dz1x7zh3q5284d";
    libPath = "lib.rs";
    libName = "encoding_index_singlebyte";
    inherit dependencies buildDependencies features;
  };
  encoding_index_tradchinese_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-tradchinese";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0lb12nbv29cy41gx26yz3v4kfi8h1xbn1ppja8szgqi2zm1wlywn";
    libPath = "lib.rs";
    libName = "encoding_index_tradchinese";
    inherit dependencies buildDependencies features;
  };
  encoding_index_tests_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding_index_tests";
    version = "0.1.4";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0z09kwh4z76q00cfr081rgjbnai4s2maq2vk88lgrq9d6bkf93f6";
    libPath = "index_tests.rs";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.11.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "19nz17q6dzp0mx2jhh9qbj45gkvvgcl7zq9z2ai5a8ihbisfj6d7";
    inherit dependencies buildDependencies features;
  };
  escapade_0_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "escapade";
    version = "0.0.3";
    authors = [ "Florian Gilcher <florian.gilcher@asquera.de>" ];
    sha256 = "084dxfi7f1c1aza1y7wvl6l7hmlnb5nabw3nqck32hnrrlhkimcl";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
    inherit dependencies buildDependencies features;
  };
  getopts_0_2_18_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "getopts";
    version = "0.2.18";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0c1m95wg8pkvdq4mwcd2v78r1lb6a5s3ljm7158dsl56mvzcwd5y";
    inherit dependencies buildDependencies features;
  };
  itoa_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "193a744yd74rmk13hl8xvd9p2hqhdkyf8xkvi1mxm5s10bby0h8v";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  lazy_static_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "1.0.2";
    authors = [ "Marvin L√∂bel <loebel.marvin@gmail.com>" ];
    sha256 = "0ix4dmy6zb4v3m75l4alg84fk06y145z52z9pyysc9labw2x5r3r";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_42_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.42";
    authors = [ "The Rust Project Developers" ];
    sha256 = "064v49hz1zpl081w8c4vwikrkhaxp06y4i9l7x7wx6bjpwp19pjx";
    inherit dependencies buildDependencies features;
  };
  linked_hash_map_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "linked-hash-map";
    version = "0.5.1";
    authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" "Andrew Paseltiner <apaseltiner@gmail.com>" ];
    sha256 = "1f29c7j53z7w5v0g115yii9dmmbsahr93ak375g48vi75v3p4030";
    inherit dependencies buildDependencies features;
  };
  log_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1gdmwrbm7s18zcdz4lcdhz975m4gwhi854c7j1rvj1gsr8aca250";
    inherit dependencies buildDependencies features;
  };
  maildir_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "maildir";
    version = "0.1.1";
    authors = [ "Kartikaya Gupta <kats@seldon.staktrace.com>" ];
    sha256 = "1shw2jqacqyh5d7z7za7kxh3954h4bjgz1wx7m937p5nfigwsqca";
    inherit dependencies buildDependencies features;
  };
  mailparse_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mailparse";
    version = "0.5.1";
    authors = [ "Kartikaya Gupta <kats@seldon.staktrace.com>" ];
    sha256 = "12dm30w9k6qd1v8sr17960nyslsq2j4l0iy1rpd0p513daggxnlf";
    inherit dependencies buildDependencies features;
  };
  memchr_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "2.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0ls2y47rjwapjdax6bp974gdp06ggm1v8d1h69wyydmh1nhgm5gr";
    inherit dependencies buildDependencies features;
  };
  nix_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nix";
    version = "0.5.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "17dp0x440bl6a4dc3rxqnj7p2sx46isg2hhvdqpjkdlca84qd7b2";
    inherit dependencies buildDependencies features;
  };
  num_integer_0_1_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-integer";
    version = "0.1.39";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1f42ls46cghs13qfzgbd7syib2zc6m7hlmv1qlar6c9mdxapvvbg";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_2_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.2.5";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0ql203ca6lzppksy4fsfnpz3kq96vwlwvyn3ahvnd9g6k9f5ncj0";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_4_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.4.8";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "00rns5yzh5p38p6y5g9vrwqhchmqypcsk7bji1xmvjkhj8f3ghd0";
    inherit dependencies buildDependencies features;
  };
  pulldown_cmark_0_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pulldown-cmark";
    version = "0.0.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "08wgdjqjnaz8yjvamdwcf1cqz18z795frkmbal9rgp9g2i1yrzwy";
    inherit dependencies buildDependencies features;
  };
  quote_0_3_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.3.15";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "09il61jv4kd1360spaj46qwyl21fv1qz18fsv2jra8wdnlgl5jsg";
    inherit dependencies buildDependencies features;
  };
  quote_0_6_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.6.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1bqm3fjww2ivnshzxg54nnn1dxrx1cmvpjc5d50xjvjfg9xjb4b5";
    inherit dependencies buildDependencies features;
  };
  quoted_printable_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quoted_printable";
    version = "0.3.3";
    authors = [ "Kartikaya Gupta <kats@seldon.staktrace.com>" ];
    sha256 = "1faf80q1zzdmj9nqr2xq7jy6v7n3akjl49gxa1kkwqagc0bjwsc5";
    inherit dependencies buildDependencies features;
  };
  rand_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0h8pkg23wb67i8904sm76iyr1jlmhklb85vbpz9c9191a24xzkfm";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.40";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "132rnhrq49l3z7gjrwj2zfadgw6q0355s6a7id7x7c0d7sk72611";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  regex_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.2.11";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0r50cymxdqp0fv1dxd22mjr6y32q450nwacd279p9s7lh0cafijj";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_5_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.5.6";
    authors = [ "The Rust Project Developers" ];
    sha256 = "10vf3r34bgjnbrnqd5aszn35bjvm8insw498l1vjy8zx5yms3427";
    inherit dependencies buildDependencies features;
  };
  remove_dir_all_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "remove_dir_all";
    version = "0.5.1";
    authors = [ "Aaronepower <theaaronepower@gmail.com>" ];
    sha256 = "1chx3yvfbj46xjz4bzsvps208l46hfbcy0sm98gpiya454n4rrl7";
    inherit dependencies buildDependencies features;
  };
  rust_scripts_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rust-scripts";
    version = "0.1.0";
    authors = [ "Malte Brandy <malte.brandy@maralorn.de>" ];
    src = ./.;
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "00ma4r9haq0zv5krps617mym6y74056pfcivyld0kpci156vfaax";
    inherit dependencies buildDependencies features;
  };
  rustyline_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustyline";
    version = "1.0.0";
    authors = [ "Katsu Kawakami <kkawa1570@gmail.com>" ];
    sha256 = "0xq3xal9wdyf0z46maspr0qsvw84n2ip8146n433ywvn1c03zwg9";
    inherit dependencies buildDependencies features;
  };
  serde_1_0_70_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "1.0.70";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1z1gyjf5rrs1k3j1civfzqjqs790651bwf8m31bw2pagclhnazs4";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  serde_derive_1_0_70_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive";
    version = "1.0.70";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "15vn8fs56x0qmv3203m8wkbm9gc95fcwns9djv9aldhrgz25aw41";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  serde_json_1_0_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "1.0.24";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1wvvc3y0202my2p00ah8ygl1794nspar9pf39fz1525jd6m6k8a1";
    inherit dependencies buildDependencies features;
  };
  serde_yaml_0_7_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_yaml";
    version = "0.7.5";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1ai03b8gii88kziljn4ja3ayd6mc3zy0y8aq2wncxwkh0gd707gd";
    inherit dependencies buildDependencies features;
  };
  skeptic_0_6_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "skeptic";
    version = "0.6.1";
    authors = [ "Brian Anderson <banderson@mozilla.com>" ];
    sha256 = "1f6lls5lz1g2ipkyl5f00c3algcdssgbla1s7ywzkkw8gx2vx0qx";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  syn_0_11_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.11.11";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0yw8ng7x1dn5a6ykg0ib49y7r9nhzgpiq2989rqdp7rdz3n85502";
    inherit dependencies buildDependencies features;
  };
  syn_0_14_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.14.4";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0hh8ph4pr3cg8kld4b5j6d8lh2q4sl6dhwwka4v15ip5lzd4ra7d";
    inherit dependencies buildDependencies features;
  };
  synom_0_11_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synom";
    version = "0.11.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1l6d1s9qjfp6ng2s2z8219igvlv7gyk8gby97sdykqc1r93d8rhc";
    inherit dependencies buildDependencies features;
  };
  task_hookrs_0_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "task-hookrs";
    version = "0.5.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" "Mario Krehl <mario-krehl@gmx.de>" "Malte Brandy <malte.brandy@maralorn.de>" ];
    src = fetchgit {
       url = "https://git.darmstadt.ccc.de/maralorn/task-hookrs.git";
       rev = "45ffb137ef97f0f998f4ee06da9fd849f192b3be";
       sha256 = "1wq3ac608xlps1gfrkbgjz24i4rjf1xhcr5r75z6arlakw3gmynp";
    };
    inherit dependencies buildDependencies features;
  };
  tempdir_0_3_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempdir";
    version = "0.3.7";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0y53sxybyljrr7lh0x0ysrsa7p7cljmwv9v80acy3rc6n97g67vy";
    inherit dependencies buildDependencies features;
  };
  termios_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termios";
    version = "0.3.0";
    authors = [ "David Cuddeback <david.cuddeback@gmail.com>" ];
    sha256 = "0d5vpwdaimbq2pz4a4njcyxc2spvssxn2v8n9mc6flys4h0ir9nv";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.5";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0mkp0sp91aqsk7brgygai4igv751r1754rsxn37mig3ag5rx8np6";
    inherit dependencies buildDependencies features;
  };
  time_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "time";
    version = "0.1.40";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wgnbjamljz6bqxsd5axc4p2mmhkqfrryj4gf2yswjaxiw5dd01m";
    inherit dependencies buildDependencies features;
  };
  ucd_util_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ucd-util";
    version = "0.1.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "02a8h3siipx52b832xc8m8rwasj6nx9jpiwfldw8hp6k205hgkn0";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.5";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "0886lc2aymwgy0lhavwn6s48ik3c61ykzzd3za6prgnw51j7bi4w";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.0.4";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "1dc8wkkcd3s6534s5aw4lbjn8m67flkkbnajp5bl8408wdg8rh9v";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.1.0";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
    inherit dependencies buildDependencies features;
  };
  uuid_0_6_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "uuid";
    version = "0.6.5";
    authors = [ "Ashley Mannix<ashleymannix@live.com.au>" "Christopher Armstrong" "Dylan DPC<dylan.dpc@gmail.com>" "Hunar Roop Kahlon<hunar.roop@gmail.com>" ];
    sha256 = "1jy15m4yxxwma0jsy070garhbgfprky23i77rawjkk75vqhnnhlf";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.5";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0cfdsxa5yf832r5i2z7dhdvnryyvhfp3nb32gpcaq502zgjdm3w6";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  yaml_rust_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "yaml-rust";
    version = "0.4.0";
    authors = [ "Yuheng Chen <yuhengchen@sensetime.com>" ];
    sha256 = "1mqv1jagn9hfym28ypp2dq6hw9kcyilzil9ydlpls0ivb8d9i3h8";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_6 = { features?(aho_corasick_0_6_6_features {}) }: aho_corasick_0_6_6_ {
    dependencies = mapFeatures features ([ memchr_2_0_1 ]);
  };
  aho_corasick_0_6_6_features = f: updateFeatures f (rec {
    aho_corasick_0_6_6.default = (f.aho_corasick_0_6_6.default or true);
    memchr_2_0_1.default = true;
  }) [ memchr_2_0_1_features ];
  backtrace_0_3_9 = { features?(backtrace_0_3_9_features {}) }: backtrace_0_3_9_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_4 rustc_demangle_0_1_9 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_9.backtrace-sys or false then [ backtrace_sys_0_1_23 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_42 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_9.winapi or false then [ winapi_0_3_5 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_9 or {});
  };
  backtrace_0_3_9_features = f: updateFeatures f (rec {
    backtrace_0_3_9.addr2line =
      (f.backtrace_0_3_9.addr2line or false) ||
      (f.backtrace_0_3_9.gimli-symbolize or false) ||
      (backtrace_0_3_9.gimli-symbolize or false);
    backtrace_0_3_9.backtrace-sys =
      (f.backtrace_0_3_9.backtrace-sys or false) ||
      (f.backtrace_0_3_9.libbacktrace or false) ||
      (backtrace_0_3_9.libbacktrace or false);
    backtrace_0_3_9.coresymbolication =
      (f.backtrace_0_3_9.coresymbolication or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.dbghelp =
      (f.backtrace_0_3_9.dbghelp or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.default = (f.backtrace_0_3_9.default or true);
    backtrace_0_3_9.dladdr =
      (f.backtrace_0_3_9.dladdr or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.findshlibs =
      (f.backtrace_0_3_9.findshlibs or false) ||
      (f.backtrace_0_3_9.gimli-symbolize or false) ||
      (backtrace_0_3_9.gimli-symbolize or false);
    backtrace_0_3_9.gimli =
      (f.backtrace_0_3_9.gimli or false) ||
      (f.backtrace_0_3_9.gimli-symbolize or false) ||
      (backtrace_0_3_9.gimli-symbolize or false);
    backtrace_0_3_9.libbacktrace =
      (f.backtrace_0_3_9.libbacktrace or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.libunwind =
      (f.backtrace_0_3_9.libunwind or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.memmap =
      (f.backtrace_0_3_9.memmap or false) ||
      (f.backtrace_0_3_9.gimli-symbolize or false) ||
      (backtrace_0_3_9.gimli-symbolize or false);
    backtrace_0_3_9.object =
      (f.backtrace_0_3_9.object or false) ||
      (f.backtrace_0_3_9.gimli-symbolize or false) ||
      (backtrace_0_3_9.gimli-symbolize or false);
    backtrace_0_3_9.rustc-serialize =
      (f.backtrace_0_3_9.rustc-serialize or false) ||
      (f.backtrace_0_3_9.serialize-rustc or false) ||
      (backtrace_0_3_9.serialize-rustc or false);
    backtrace_0_3_9.serde =
      (f.backtrace_0_3_9.serde or false) ||
      (f.backtrace_0_3_9.serialize-serde or false) ||
      (backtrace_0_3_9.serialize-serde or false);
    backtrace_0_3_9.serde_derive =
      (f.backtrace_0_3_9.serde_derive or false) ||
      (f.backtrace_0_3_9.serialize-serde or false) ||
      (backtrace_0_3_9.serialize-serde or false);
    backtrace_0_3_9.winapi =
      (f.backtrace_0_3_9.winapi or false) ||
      (f.backtrace_0_3_9.dbghelp or false) ||
      (backtrace_0_3_9.dbghelp or false);
    backtrace_sys_0_1_23.default = true;
    cfg_if_0_1_4.default = true;
    libc_0_2_42.default = true;
    rustc_demangle_0_1_9.default = true;
    winapi_0_3_5.dbghelp = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.processthreadsapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.winnt = true;
  }) [ cfg_if_0_1_4_features rustc_demangle_0_1_9_features backtrace_sys_0_1_23_features libc_0_2_42_features winapi_0_3_5_features ];
  backtrace_sys_0_1_23 = { features?(backtrace_sys_0_1_23_features {}) }: backtrace_sys_0_1_23_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_18 ]);
  };
  backtrace_sys_0_1_23_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_23.default = (f.backtrace_sys_0_1_23.default or true);
    cc_1_0_18.default = true;
    libc_0_2_42.default = true;
  }) [ libc_0_2_42_features cc_1_0_18_features ];
  base64_0_1_1 = { features?(base64_0_1_1_features {}) }: base64_0_1_1_ {};
  base64_0_1_1_features = f: updateFeatures f (rec {
    base64_0_1_1.default = (f.base64_0_1_1.default or true);
  }) [];
  bitflags_0_4_0 = { features?(bitflags_0_4_0_features {}) }: bitflags_0_4_0_ {
    features = mkFeatures (features.bitflags_0_4_0 or {});
  };
  bitflags_0_4_0_features = f: updateFeatures f (rec {
    bitflags_0_4_0.default = (f.bitflags_0_4_0.default or true);
  }) [];
  bitflags_1_0_3 = { features?(bitflags_1_0_3_features {}) }: bitflags_1_0_3_ {
    features = mkFeatures (features.bitflags_1_0_3 or {});
  };
  bitflags_1_0_3_features = f: updateFeatures f (rec {
    bitflags_1_0_3.default = (f.bitflags_1_0_3.default or true);
  }) [];
  cc_1_0_18 = { features?(cc_1_0_18_features {}) }: cc_1_0_18_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_18 or {});
  };
  cc_1_0_18_features = f: updateFeatures f (rec {
    cc_1_0_18.default = (f.cc_1_0_18.default or true);
    cc_1_0_18.rayon =
      (f.cc_1_0_18.rayon or false) ||
      (f.cc_1_0_18.parallel or false) ||
      (cc_1_0_18.parallel or false);
  }) [];
  cfg_if_0_1_4 = { features?(cfg_if_0_1_4_features {}) }: cfg_if_0_1_4_ {};
  cfg_if_0_1_4_features = f: updateFeatures f (rec {
    cfg_if_0_1_4.default = (f.cfg_if_0_1_4.default or true);
  }) [];
  chrono_0_4_4 = { features?(chrono_0_4_4_features {}) }: chrono_0_4_4_ {
    dependencies = mapFeatures features ([ num_integer_0_1_39 num_traits_0_2_5 ]
      ++ (if features.chrono_0_4_4.time or false then [ time_0_1_40 ] else []));
    features = mkFeatures (features.chrono_0_4_4 or {});
  };
  chrono_0_4_4_features = f: updateFeatures f (rec {
    chrono_0_4_4.clock =
      (f.chrono_0_4_4.clock or false) ||
      (f.chrono_0_4_4.default or false) ||
      (chrono_0_4_4.default or false);
    chrono_0_4_4.default = (f.chrono_0_4_4.default or true);
    chrono_0_4_4.time =
      (f.chrono_0_4_4.time or false) ||
      (f.chrono_0_4_4.clock or false) ||
      (chrono_0_4_4.clock or false);
    num_integer_0_1_39.default = (f.num_integer_0_1_39.default or false);
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or false);
    time_0_1_40.default = true;
  }) [ num_integer_0_1_39_features num_traits_0_2_5_features time_0_1_40_features ];
  derive_builder_0_5_1 = { features?(derive_builder_0_5_1_features {}) }: derive_builder_0_5_1_ {
    dependencies = mapFeatures features ([ derive_builder_core_0_2_0 quote_0_3_15 syn_0_11_11 ]);
    buildDependencies = mapFeatures features ([]);
    features = mkFeatures (features.derive_builder_0_5_1 or {});
  };
  derive_builder_0_5_1_features = f: updateFeatures f (rec {
    derive_builder_0_5_1.compiletest_rs =
      (f.derive_builder_0_5_1.compiletest_rs or false) ||
      (f.derive_builder_0_5_1.nightlytests or false) ||
      (derive_builder_0_5_1.nightlytests or false);
    derive_builder_0_5_1.default = (f.derive_builder_0_5_1.default or true);
    derive_builder_0_5_1.env_logger =
      (f.derive_builder_0_5_1.env_logger or false) ||
      (f.derive_builder_0_5_1.logging or false) ||
      (derive_builder_0_5_1.logging or false);
    derive_builder_0_5_1.log =
      (f.derive_builder_0_5_1.log or false) ||
      (f.derive_builder_0_5_1.logging or false) ||
      (derive_builder_0_5_1.logging or false);
    derive_builder_0_5_1.skeptic =
      (f.derive_builder_0_5_1.skeptic or false) ||
      (f.derive_builder_0_5_1.skeptic_tests or false) ||
      (derive_builder_0_5_1.skeptic_tests or false);
    derive_builder_core_0_2_0.default = true;
    derive_builder_core_0_2_0.logging =
      (f.derive_builder_core_0_2_0.logging or false) ||
      (derive_builder_0_5_1.logging or false) ||
      (f.derive_builder_0_5_1.logging or false);
    quote_0_3_15.default = true;
    syn_0_11_11.default = true;
  }) [ derive_builder_core_0_2_0_features quote_0_3_15_features syn_0_11_11_features ];
  derive_builder_core_0_2_0 = { features?(derive_builder_core_0_2_0_features {}) }: derive_builder_core_0_2_0_ {
    dependencies = mapFeatures features ([ quote_0_3_15 syn_0_11_11 ]);
    features = mkFeatures (features.derive_builder_core_0_2_0 or {});
  };
  derive_builder_core_0_2_0_features = f: updateFeatures f (rec {
    derive_builder_core_0_2_0.default = (f.derive_builder_core_0_2_0.default or true);
    derive_builder_core_0_2_0.log =
      (f.derive_builder_core_0_2_0.log or false) ||
      (f.derive_builder_core_0_2_0.logging or false) ||
      (derive_builder_core_0_2_0.logging or false);
    quote_0_3_15.default = true;
    syn_0_11_11.default = true;
  }) [ quote_0_3_15_features syn_0_11_11_features ];
  dialog_0_1_0 = { features?(dialog_0_1_0_features {}) }: dialog_0_1_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 escapade_0_0_3 rustyline_1_0_0 termios_0_3_0 ]);
  };
  dialog_0_1_0_features = f: updateFeatures f (rec {
    dialog_0_1_0.default = (f.dialog_0_1_0.default or true);
    error_chain_0_11_0.default = true;
    escapade_0_0_3.default = true;
    rustyline_1_0_0.default = true;
    termios_0_3_0.default = true;
  }) [ error_chain_0_11_0_features escapade_0_0_3_features rustyline_1_0_0_features termios_0_3_0_features ];
  dtoa_0_4_3 = { features?(dtoa_0_4_3_features {}) }: dtoa_0_4_3_ {};
  dtoa_0_4_3_features = f: updateFeatures f (rec {
    dtoa_0_4_3.default = (f.dtoa_0_4_3.default or true);
  }) [];
  encode_unicode_0_1_3 = { features?(encode_unicode_0_1_3_features {}) }: encode_unicode_0_1_3_ {
    dependencies = mapFeatures features ([]);
  };
  encode_unicode_0_1_3_features = f: updateFeatures f (rec {
    encode_unicode_0_1_3.default = (f.encode_unicode_0_1_3.default or true);
  }) [];
  encoding_0_2_33 = { features?(encoding_0_2_33_features {}) }: encoding_0_2_33_ {
    dependencies = mapFeatures features ([ encoding_index_japanese_1_20141219_5 encoding_index_korean_1_20141219_5 encoding_index_simpchinese_1_20141219_5 encoding_index_singlebyte_1_20141219_5 encoding_index_tradchinese_1_20141219_5 ]);
  };
  encoding_0_2_33_features = f: updateFeatures f (rec {
    encoding_0_2_33.default = (f.encoding_0_2_33.default or true);
    encoding_index_japanese_1_20141219_5.default = true;
    encoding_index_korean_1_20141219_5.default = true;
    encoding_index_simpchinese_1_20141219_5.default = true;
    encoding_index_singlebyte_1_20141219_5.default = true;
    encoding_index_tradchinese_1_20141219_5.default = true;
  }) [ encoding_index_japanese_1_20141219_5_features encoding_index_korean_1_20141219_5_features encoding_index_simpchinese_1_20141219_5_features encoding_index_singlebyte_1_20141219_5_features encoding_index_tradchinese_1_20141219_5_features ];
  encoding_index_japanese_1_20141219_5 = { features?(encoding_index_japanese_1_20141219_5_features {}) }: encoding_index_japanese_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_japanese_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_japanese_1_20141219_5.default = (f.encoding_index_japanese_1_20141219_5.default or true);
    encoding_index_tests_0_1_4.default = true;
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_korean_1_20141219_5 = { features?(encoding_index_korean_1_20141219_5_features {}) }: encoding_index_korean_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_korean_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_korean_1_20141219_5.default = (f.encoding_index_korean_1_20141219_5.default or true);
    encoding_index_tests_0_1_4.default = true;
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_simpchinese_1_20141219_5 = { features?(encoding_index_simpchinese_1_20141219_5_features {}) }: encoding_index_simpchinese_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_simpchinese_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_simpchinese_1_20141219_5.default = (f.encoding_index_simpchinese_1_20141219_5.default or true);
    encoding_index_tests_0_1_4.default = true;
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_singlebyte_1_20141219_5 = { features?(encoding_index_singlebyte_1_20141219_5_features {}) }: encoding_index_singlebyte_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_singlebyte_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_singlebyte_1_20141219_5.default = (f.encoding_index_singlebyte_1_20141219_5.default or true);
    encoding_index_tests_0_1_4.default = true;
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_tradchinese_1_20141219_5 = { features?(encoding_index_tradchinese_1_20141219_5_features {}) }: encoding_index_tradchinese_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_tradchinese_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_tests_0_1_4.default = true;
    encoding_index_tradchinese_1_20141219_5.default = (f.encoding_index_tradchinese_1_20141219_5.default or true);
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_tests_0_1_4 = { features?(encoding_index_tests_0_1_4_features {}) }: encoding_index_tests_0_1_4_ {};
  encoding_index_tests_0_1_4_features = f: updateFeatures f (rec {
    encoding_index_tests_0_1_4.default = (f.encoding_index_tests_0_1_4.default or true);
  }) [];
  error_chain_0_11_0 = { features?(error_chain_0_11_0_features {}) }: error_chain_0_11_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_11_0.backtrace or false then [ backtrace_0_3_9 ] else []));
    features = mkFeatures (features.error_chain_0_11_0 or {});
  };
  error_chain_0_11_0_features = f: updateFeatures f (rec {
    backtrace_0_3_9.default = true;
    error_chain_0_11_0.backtrace =
      (f.error_chain_0_11_0.backtrace or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
    error_chain_0_11_0.default = (f.error_chain_0_11_0.default or true);
    error_chain_0_11_0.example_generated =
      (f.error_chain_0_11_0.example_generated or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
  }) [ backtrace_0_3_9_features ];
  escapade_0_0_3 = { features?(escapade_0_0_3_features {}) }: escapade_0_0_3_ {
    buildDependencies = mapFeatures features ([ skeptic_0_6_1 ]);};
  escapade_0_0_3_features = f: updateFeatures f (rec {
    escapade_0_0_3.default = (f.escapade_0_0_3.default or true);
    skeptic_0_6_1.default = true;
  }) [ skeptic_0_6_1_features ];
  fuchsia_zircon_0_3_3 = { features?(fuchsia_zircon_0_3_3_features {}) }: fuchsia_zircon_0_3_3_ {
    dependencies = mapFeatures features ([ bitflags_1_0_3 fuchsia_zircon_sys_0_3_3 ]);
  };
  fuchsia_zircon_0_3_3_features = f: updateFeatures f (rec {
    bitflags_1_0_3.default = true;
    fuchsia_zircon_0_3_3.default = (f.fuchsia_zircon_0_3_3.default or true);
    fuchsia_zircon_sys_0_3_3.default = true;
  }) [ bitflags_1_0_3_features fuchsia_zircon_sys_0_3_3_features ];
  fuchsia_zircon_sys_0_3_3 = { features?(fuchsia_zircon_sys_0_3_3_features {}) }: fuchsia_zircon_sys_0_3_3_ {};
  fuchsia_zircon_sys_0_3_3_features = f: updateFeatures f (rec {
    fuchsia_zircon_sys_0_3_3.default = (f.fuchsia_zircon_sys_0_3_3.default or true);
  }) [];
  getopts_0_2_18 = { features?(getopts_0_2_18_features {}) }: getopts_0_2_18_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_5 ]);
  };
  getopts_0_2_18_features = f: updateFeatures f (rec {
    getopts_0_2_18.default = (f.getopts_0_2_18.default or true);
    unicode_width_0_1_5.default = true;
  }) [ unicode_width_0_1_5_features ];
  itoa_0_4_2 = { features?(itoa_0_4_2_features {}) }: itoa_0_4_2_ {
    features = mkFeatures (features.itoa_0_4_2 or {});
  };
  itoa_0_4_2_features = f: updateFeatures f (rec {
    itoa_0_4_2.default = (f.itoa_0_4_2.default or true);
    itoa_0_4_2.std =
      (f.itoa_0_4_2.std or false) ||
      (f.itoa_0_4_2.default or false) ||
      (itoa_0_4_2.default or false);
  }) [];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  lazy_static_1_0_2 = { features?(lazy_static_1_0_2_features {}) }: lazy_static_1_0_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_1_0_2 or {});
  };
  lazy_static_1_0_2_features = f: updateFeatures f (rec {
    lazy_static_1_0_2.default = (f.lazy_static_1_0_2.default or true);
    lazy_static_1_0_2.nightly =
      (f.lazy_static_1_0_2.nightly or false) ||
      (f.lazy_static_1_0_2.spin_no_std or false) ||
      (lazy_static_1_0_2.spin_no_std or false);
    lazy_static_1_0_2.spin =
      (f.lazy_static_1_0_2.spin or false) ||
      (f.lazy_static_1_0_2.spin_no_std or false) ||
      (lazy_static_1_0_2.spin_no_std or false);
  }) [];
  libc_0_2_42 = { features?(libc_0_2_42_features {}) }: libc_0_2_42_ {
    features = mkFeatures (features.libc_0_2_42 or {});
  };
  libc_0_2_42_features = f: updateFeatures f (rec {
    libc_0_2_42.default = (f.libc_0_2_42.default or true);
    libc_0_2_42.use_std =
      (f.libc_0_2_42.use_std or false) ||
      (f.libc_0_2_42.default or false) ||
      (libc_0_2_42.default or false);
  }) [];
  linked_hash_map_0_5_1 = { features?(linked_hash_map_0_5_1_features {}) }: linked_hash_map_0_5_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.linked_hash_map_0_5_1 or {});
  };
  linked_hash_map_0_5_1_features = f: updateFeatures f (rec {
    linked_hash_map_0_5_1.default = (f.linked_hash_map_0_5_1.default or true);
    linked_hash_map_0_5_1.heapsize =
      (f.linked_hash_map_0_5_1.heapsize or false) ||
      (f.linked_hash_map_0_5_1.heapsize_impl or false) ||
      (linked_hash_map_0_5_1.heapsize_impl or false);
    linked_hash_map_0_5_1.serde =
      (f.linked_hash_map_0_5_1.serde or false) ||
      (f.linked_hash_map_0_5_1.serde_impl or false) ||
      (linked_hash_map_0_5_1.serde_impl or false);
    linked_hash_map_0_5_1.serde_test =
      (f.linked_hash_map_0_5_1.serde_test or false) ||
      (f.linked_hash_map_0_5_1.serde_impl or false) ||
      (linked_hash_map_0_5_1.serde_impl or false);
  }) [];
  log_0_4_3 = { features?(log_0_4_3_features {}) }: log_0_4_3_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_4 ]);
    features = mkFeatures (features.log_0_4_3 or {});
  };
  log_0_4_3_features = f: updateFeatures f (rec {
    cfg_if_0_1_4.default = true;
    log_0_4_3.default = (f.log_0_4_3.default or true);
  }) [ cfg_if_0_1_4_features ];
  maildir_0_1_1 = { features?(maildir_0_1_1_features {}) }: maildir_0_1_1_ {
    dependencies = mapFeatures features ([ mailparse_0_5_1 ]);
  };
  maildir_0_1_1_features = f: updateFeatures f (rec {
    maildir_0_1_1.default = (f.maildir_0_1_1.default or true);
    mailparse_0_5_1.default = true;
  }) [ mailparse_0_5_1_features ];
  mailparse_0_5_1 = { features?(mailparse_0_5_1_features {}) }: mailparse_0_5_1_ {
    dependencies = mapFeatures features ([ base64_0_1_1 encoding_0_2_33 quoted_printable_0_3_3 ]);
  };
  mailparse_0_5_1_features = f: updateFeatures f (rec {
    base64_0_1_1.default = true;
    encoding_0_2_33.default = true;
    mailparse_0_5_1.default = (f.mailparse_0_5_1.default or true);
    quoted_printable_0_3_3.default = true;
  }) [ base64_0_1_1_features encoding_0_2_33_features quoted_printable_0_3_3_features ];
  memchr_2_0_1 = { features?(memchr_2_0_1_features {}) }: memchr_2_0_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_2_0_1.libc or false then [ libc_0_2_42 ] else []));
    features = mkFeatures (features.memchr_2_0_1 or {});
  };
  memchr_2_0_1_features = f: updateFeatures f (rec {
    libc_0_2_42.default = (f.libc_0_2_42.default or false);
    libc_0_2_42.use_std =
      (f.libc_0_2_42.use_std or false) ||
      (memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.use_std or false);
    memchr_2_0_1.default = (f.memchr_2_0_1.default or true);
    memchr_2_0_1.libc =
      (f.memchr_2_0_1.libc or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false) ||
      (f.memchr_2_0_1.use_std or false) ||
      (memchr_2_0_1.use_std or false);
    memchr_2_0_1.use_std =
      (f.memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false);
  }) [ libc_0_2_42_features ];
  nix_0_5_1 = { features?(nix_0_5_1_features {}) }: nix_0_5_1_ {
    dependencies = mapFeatures features ([ bitflags_0_4_0 libc_0_2_42 ]);
    features = mkFeatures (features.nix_0_5_1 or {});
  };
  nix_0_5_1_features = f: updateFeatures f (rec {
    bitflags_0_4_0.default = true;
    libc_0_2_42.default = true;
    nix_0_5_1.default = (f.nix_0_5_1.default or true);
  }) [ bitflags_0_4_0_features libc_0_2_42_features ];
  num_integer_0_1_39 = { features?(num_integer_0_1_39_features {}) }: num_integer_0_1_39_ {
    dependencies = mapFeatures features ([ num_traits_0_2_5 ]);
    features = mkFeatures (features.num_integer_0_1_39 or {});
  };
  num_integer_0_1_39_features = f: updateFeatures f (rec {
    num_integer_0_1_39.default = (f.num_integer_0_1_39.default or true);
    num_integer_0_1_39.std =
      (f.num_integer_0_1_39.std or false) ||
      (f.num_integer_0_1_39.default or false) ||
      (num_integer_0_1_39.default or false);
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or false);
    num_traits_0_2_5.i128 =
      (f.num_traits_0_2_5.i128 or false) ||
      (num_integer_0_1_39.i128 or false) ||
      (f.num_integer_0_1_39.i128 or false);
    num_traits_0_2_5.std =
      (f.num_traits_0_2_5.std or false) ||
      (num_integer_0_1_39.std or false) ||
      (f.num_integer_0_1_39.std or false);
  }) [ num_traits_0_2_5_features ];
  num_traits_0_2_5 = { features?(num_traits_0_2_5_features {}) }: num_traits_0_2_5_ {
    features = mkFeatures (features.num_traits_0_2_5 or {});
  };
  num_traits_0_2_5_features = f: updateFeatures f (rec {
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or true);
    num_traits_0_2_5.std =
      (f.num_traits_0_2_5.std or false) ||
      (f.num_traits_0_2_5.default or false) ||
      (num_traits_0_2_5.default or false);
  }) [];
  proc_macro2_0_4_8 = { features?(proc_macro2_0_4_8_features {}) }: proc_macro2_0_4_8_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_4_8 or {});
  };
  proc_macro2_0_4_8_features = f: updateFeatures f (rec {
    proc_macro2_0_4_8.default = (f.proc_macro2_0_4_8.default or true);
    proc_macro2_0_4_8.proc-macro =
      (f.proc_macro2_0_4_8.proc-macro or false) ||
      (f.proc_macro2_0_4_8.default or false) ||
      (proc_macro2_0_4_8.default or false) ||
      (f.proc_macro2_0_4_8.nightly or false) ||
      (proc_macro2_0_4_8.nightly or false);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  pulldown_cmark_0_0_3 = { features?(pulldown_cmark_0_0_3_features {}) }: pulldown_cmark_0_0_3_ {
    dependencies = mapFeatures features ([ getopts_0_2_18 ]);
  };
  pulldown_cmark_0_0_3_features = f: updateFeatures f (rec {
    getopts_0_2_18.default = true;
    pulldown_cmark_0_0_3.default = (f.pulldown_cmark_0_0_3.default or true);
  }) [ getopts_0_2_18_features ];
  quote_0_3_15 = { features?(quote_0_3_15_features {}) }: quote_0_3_15_ {};
  quote_0_3_15_features = f: updateFeatures f (rec {
    quote_0_3_15.default = (f.quote_0_3_15.default or true);
  }) [];
  quote_0_6_3 = { features?(quote_0_6_3_features {}) }: quote_0_6_3_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_8 ]);
    features = mkFeatures (features.quote_0_6_3 or {});
  };
  quote_0_6_3_features = f: updateFeatures f (rec {
    proc_macro2_0_4_8.default = (f.proc_macro2_0_4_8.default or false);
    proc_macro2_0_4_8.proc-macro =
      (f.proc_macro2_0_4_8.proc-macro or false) ||
      (quote_0_6_3.proc-macro or false) ||
      (f.quote_0_6_3.proc-macro or false);
    quote_0_6_3.default = (f.quote_0_6_3.default or true);
    quote_0_6_3.proc-macro =
      (f.quote_0_6_3.proc-macro or false) ||
      (f.quote_0_6_3.default or false) ||
      (quote_0_6_3.default or false);
  }) [ proc_macro2_0_4_8_features ];
  quoted_printable_0_3_3 = { features?(quoted_printable_0_3_3_features {}) }: quoted_printable_0_3_3_ {};
  quoted_printable_0_3_3_features = f: updateFeatures f (rec {
    quoted_printable_0_3_3.default = (f.quoted_printable_0_3_3.default or true);
  }) [];
  rand_0_4_2 = { features?(rand_0_4_2_features {}) }: rand_0_4_2_ {
    dependencies = (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_4_2.libc or false then [ libc_0_2_42 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
    features = mkFeatures (features.rand_0_4_2 or {});
  };
  rand_0_4_2_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_42.default = true;
    rand_0_4_2.default = (f.rand_0_4_2.default or true);
    rand_0_4_2.i128_support =
      (f.rand_0_4_2.i128_support or false) ||
      (f.rand_0_4_2.nightly or false) ||
      (rand_0_4_2.nightly or false);
    rand_0_4_2.libc =
      (f.rand_0_4_2.libc or false) ||
      (f.rand_0_4_2.std or false) ||
      (rand_0_4_2.std or false);
    rand_0_4_2.std =
      (f.rand_0_4_2.std or false) ||
      (f.rand_0_4_2.default or false) ||
      (rand_0_4_2.default or false);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntsecapi = true;
    winapi_0_3_5.profileapi = true;
    winapi_0_3_5.winnt = true;
  }) [ fuchsia_zircon_0_3_3_features libc_0_2_42_features winapi_0_3_5_features ];
  redox_syscall_0_1_40 = { features?(redox_syscall_0_1_40_features {}) }: redox_syscall_0_1_40_ {};
  redox_syscall_0_1_40_features = f: updateFeatures f (rec {
    redox_syscall_0_1_40.default = (f.redox_syscall_0_1_40.default or true);
  }) [];
  regex_0_2_11 = { features?(regex_0_2_11_features {}) }: regex_0_2_11_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_6 memchr_2_0_1 regex_syntax_0_5_6 thread_local_0_3_5 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_0_2_11 or {});
  };
  regex_0_2_11_features = f: updateFeatures f (rec {
    aho_corasick_0_6_6.default = true;
    memchr_2_0_1.default = true;
    regex_0_2_11.default = (f.regex_0_2_11.default or true);
    regex_0_2_11.pattern =
      (f.regex_0_2_11.pattern or false) ||
      (f.regex_0_2_11.unstable or false) ||
      (regex_0_2_11.unstable or false);
    regex_syntax_0_5_6.default = true;
    thread_local_0_3_5.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_6_features memchr_2_0_1_features regex_syntax_0_5_6_features thread_local_0_3_5_features utf8_ranges_1_0_0_features ];
  regex_syntax_0_5_6 = { features?(regex_syntax_0_5_6_features {}) }: regex_syntax_0_5_6_ {
    dependencies = mapFeatures features ([ ucd_util_0_1_1 ]);
  };
  regex_syntax_0_5_6_features = f: updateFeatures f (rec {
    regex_syntax_0_5_6.default = (f.regex_syntax_0_5_6.default or true);
    ucd_util_0_1_1.default = true;
  }) [ ucd_util_0_1_1_features ];
  remove_dir_all_0_5_1 = { features?(remove_dir_all_0_5_1_features {}) }: remove_dir_all_0_5_1_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  remove_dir_all_0_5_1_features = f: updateFeatures f (rec {
    remove_dir_all_0_5_1.default = (f.remove_dir_all_0_5_1.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.errhandlingapi = true;
    winapi_0_3_5.fileapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.winbase = true;
    winapi_0_3_5.winerror = true;
  }) [ winapi_0_3_5_features ];
  rust_scripts_0_1_0 = { features?(rust_scripts_0_1_0_features {}) }: rust_scripts_0_1_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_4 dialog_0_1_0 error_chain_0_11_0 lazy_static_1_0_2 maildir_0_1_1 mailparse_0_5_1 regex_0_2_11 serde_1_0_70 serde_derive_1_0_70 serde_yaml_0_7_5 task_hookrs_0_5_0 uuid_0_6_5 ]);
  };
  rust_scripts_0_1_0_features = f: updateFeatures f (rec {
    chrono_0_4_4.default = true;
    dialog_0_1_0.default = true;
    error_chain_0_11_0.default = true;
    lazy_static_1_0_2.default = true;
    maildir_0_1_1.default = true;
    mailparse_0_5_1.default = true;
    regex_0_2_11.default = true;
    rust_scripts_0_1_0.default = (f.rust_scripts_0_1_0.default or true);
    serde_1_0_70.default = true;
    serde_derive_1_0_70.default = true;
    serde_yaml_0_7_5.default = true;
    task_hookrs_0_5_0.default = true;
    uuid_0_6_5.default = true;
  }) [ chrono_0_4_4_features dialog_0_1_0_features error_chain_0_11_0_features lazy_static_1_0_2_features maildir_0_1_1_features mailparse_0_5_1_features regex_0_2_11_features serde_1_0_70_features serde_derive_1_0_70_features serde_yaml_0_7_5_features task_hookrs_0_5_0_features uuid_0_6_5_features ];
  rustc_demangle_0_1_9 = { features?(rustc_demangle_0_1_9_features {}) }: rustc_demangle_0_1_9_ {};
  rustc_demangle_0_1_9_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_9.default = (f.rustc_demangle_0_1_9.default or true);
  }) [];
  rustyline_1_0_0 = { features?(rustyline_1_0_0_features {}) }: rustyline_1_0_0_ {
    dependencies = mapFeatures features ([ encode_unicode_0_1_3 libc_0_2_42 unicode_width_0_1_5 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ nix_0_5_1 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  rustyline_1_0_0_features = f: updateFeatures f (rec {
    encode_unicode_0_1_3.default = true;
    kernel32_sys_0_2_2.default = true;
    libc_0_2_42.default = true;
    nix_0_5_1.default = true;
    rustyline_1_0_0.default = (f.rustyline_1_0_0.default or true);
    unicode_width_0_1_5.default = true;
    winapi_0_2_8.default = true;
  }) [ encode_unicode_0_1_3_features libc_0_2_42_features unicode_width_0_1_5_features nix_0_5_1_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  serde_1_0_70 = { features?(serde_1_0_70_features {}) }: serde_1_0_70_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.serde_1_0_70 or {});
  };
  serde_1_0_70_features = f: updateFeatures f (rec {
    serde_1_0_70.default = (f.serde_1_0_70.default or true);
    serde_1_0_70.serde_derive =
      (f.serde_1_0_70.serde_derive or false) ||
      (f.serde_1_0_70.derive or false) ||
      (serde_1_0_70.derive or false);
    serde_1_0_70.std =
      (f.serde_1_0_70.std or false) ||
      (f.serde_1_0_70.default or false) ||
      (serde_1_0_70.default or false);
    serde_1_0_70.unstable =
      (f.serde_1_0_70.unstable or false) ||
      (f.serde_1_0_70.alloc or false) ||
      (serde_1_0_70.alloc or false);
  }) [];
  serde_derive_1_0_70 = { features?(serde_derive_1_0_70_features {}) }: serde_derive_1_0_70_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_8 quote_0_6_3 syn_0_14_4 ]);
    features = mkFeatures (features.serde_derive_1_0_70 or {});
  };
  serde_derive_1_0_70_features = f: updateFeatures f (rec {
    proc_macro2_0_4_8.default = true;
    quote_0_6_3.default = true;
    serde_derive_1_0_70.default = (f.serde_derive_1_0_70.default or true);
    syn_0_14_4.default = true;
    syn_0_14_4.visit = true;
  }) [ proc_macro2_0_4_8_features quote_0_6_3_features syn_0_14_4_features ];
  serde_json_1_0_24 = { features?(serde_json_1_0_24_features {}) }: serde_json_1_0_24_ {
    dependencies = mapFeatures features ([ dtoa_0_4_3 itoa_0_4_2 serde_1_0_70 ]);
    features = mkFeatures (features.serde_json_1_0_24 or {});
  };
  serde_json_1_0_24_features = f: updateFeatures f (rec {
    dtoa_0_4_3.default = true;
    itoa_0_4_2.default = true;
    serde_1_0_70.default = true;
    serde_json_1_0_24.default = (f.serde_json_1_0_24.default or true);
    serde_json_1_0_24.indexmap =
      (f.serde_json_1_0_24.indexmap or false) ||
      (f.serde_json_1_0_24.preserve_order or false) ||
      (serde_json_1_0_24.preserve_order or false);
  }) [ dtoa_0_4_3_features itoa_0_4_2_features serde_1_0_70_features ];
  serde_yaml_0_7_5 = { features?(serde_yaml_0_7_5_features {}) }: serde_yaml_0_7_5_ {
    dependencies = mapFeatures features ([ dtoa_0_4_3 linked_hash_map_0_5_1 serde_1_0_70 yaml_rust_0_4_0 ]);
  };
  serde_yaml_0_7_5_features = f: updateFeatures f (rec {
    dtoa_0_4_3.default = true;
    linked_hash_map_0_5_1.default = true;
    serde_1_0_70.default = true;
    serde_yaml_0_7_5.default = (f.serde_yaml_0_7_5.default or true);
    yaml_rust_0_4_0.default = true;
  }) [ dtoa_0_4_3_features linked_hash_map_0_5_1_features serde_1_0_70_features yaml_rust_0_4_0_features ];
  skeptic_0_6_1 = { features?(skeptic_0_6_1_features {}) }: skeptic_0_6_1_ {
    dependencies = mapFeatures features ([ pulldown_cmark_0_0_3 tempdir_0_3_7 ]);
  };
  skeptic_0_6_1_features = f: updateFeatures f (rec {
    pulldown_cmark_0_0_3.default = true;
    skeptic_0_6_1.default = (f.skeptic_0_6_1.default or true);
    tempdir_0_3_7.default = true;
  }) [ pulldown_cmark_0_0_3_features tempdir_0_3_7_features ];
  syn_0_11_11 = { features?(syn_0_11_11_features {}) }: syn_0_11_11_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.syn_0_11_11.quote or false then [ quote_0_3_15 ] else [])
      ++ (if features.syn_0_11_11.synom or false then [ synom_0_11_3 ] else [])
      ++ (if features.syn_0_11_11.unicode-xid or false then [ unicode_xid_0_0_4 ] else []));
    features = mkFeatures (features.syn_0_11_11 or {});
  };
  syn_0_11_11_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    syn_0_11_11.default = (f.syn_0_11_11.default or true);
    syn_0_11_11.parsing =
      (f.syn_0_11_11.parsing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.printing =
      (f.syn_0_11_11.printing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.quote =
      (f.syn_0_11_11.quote or false) ||
      (f.syn_0_11_11.printing or false) ||
      (syn_0_11_11.printing or false);
    syn_0_11_11.synom =
      (f.syn_0_11_11.synom or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    syn_0_11_11.unicode-xid =
      (f.syn_0_11_11.unicode-xid or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    synom_0_11_3.default = true;
    unicode_xid_0_0_4.default = true;
  }) [ quote_0_3_15_features synom_0_11_3_features unicode_xid_0_0_4_features ];
  syn_0_14_4 = { features?(syn_0_14_4_features {}) }: syn_0_14_4_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_8 unicode_xid_0_1_0 ]
      ++ (if features.syn_0_14_4.quote or false then [ quote_0_6_3 ] else []));
    features = mkFeatures (features.syn_0_14_4 or {});
  };
  syn_0_14_4_features = f: updateFeatures f (rec {
    proc_macro2_0_4_8.default = (f.proc_macro2_0_4_8.default or false);
    proc_macro2_0_4_8.proc-macro =
      (f.proc_macro2_0_4_8.proc-macro or false) ||
      (syn_0_14_4.proc-macro or false) ||
      (f.syn_0_14_4.proc-macro or false);
    quote_0_6_3.default = (f.quote_0_6_3.default or false);
    quote_0_6_3.proc-macro =
      (f.quote_0_6_3.proc-macro or false) ||
      (syn_0_14_4.proc-macro or false) ||
      (f.syn_0_14_4.proc-macro or false);
    syn_0_14_4.clone-impls =
      (f.syn_0_14_4.clone-impls or false) ||
      (f.syn_0_14_4.default or false) ||
      (syn_0_14_4.default or false);
    syn_0_14_4.default = (f.syn_0_14_4.default or true);
    syn_0_14_4.derive =
      (f.syn_0_14_4.derive or false) ||
      (f.syn_0_14_4.default or false) ||
      (syn_0_14_4.default or false);
    syn_0_14_4.parsing =
      (f.syn_0_14_4.parsing or false) ||
      (f.syn_0_14_4.default or false) ||
      (syn_0_14_4.default or false);
    syn_0_14_4.printing =
      (f.syn_0_14_4.printing or false) ||
      (f.syn_0_14_4.default or false) ||
      (syn_0_14_4.default or false);
    syn_0_14_4.proc-macro =
      (f.syn_0_14_4.proc-macro or false) ||
      (f.syn_0_14_4.default or false) ||
      (syn_0_14_4.default or false);
    syn_0_14_4.quote =
      (f.syn_0_14_4.quote or false) ||
      (f.syn_0_14_4.printing or false) ||
      (syn_0_14_4.printing or false);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_4_8_features quote_0_6_3_features unicode_xid_0_1_0_features ];
  synom_0_11_3 = { features?(synom_0_11_3_features {}) }: synom_0_11_3_ {
    dependencies = mapFeatures features ([ unicode_xid_0_0_4 ]);
  };
  synom_0_11_3_features = f: updateFeatures f (rec {
    synom_0_11_3.default = (f.synom_0_11_3.default or true);
    unicode_xid_0_0_4.default = true;
  }) [ unicode_xid_0_0_4_features ];
  task_hookrs_0_5_0 = { features?(task_hookrs_0_5_0_features {}) }: task_hookrs_0_5_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_4 derive_builder_0_5_1 error_chain_0_11_0 log_0_4_3 serde_1_0_70 serde_derive_1_0_70 serde_json_1_0_24 uuid_0_6_5 ]);
  };
  task_hookrs_0_5_0_features = f: updateFeatures f (rec {
    chrono_0_4_4.default = true;
    derive_builder_0_5_1.default = true;
    error_chain_0_11_0.default = true;
    log_0_4_3.default = true;
    serde_1_0_70.default = true;
    serde_derive_1_0_70.default = true;
    serde_json_1_0_24.default = true;
    task_hookrs_0_5_0.default = (f.task_hookrs_0_5_0.default or true);
    uuid_0_6_5.default = true;
    uuid_0_6_5.serde = true;
    uuid_0_6_5.v4 = true;
  }) [ chrono_0_4_4_features derive_builder_0_5_1_features error_chain_0_11_0_features log_0_4_3_features serde_1_0_70_features serde_derive_1_0_70_features serde_json_1_0_24_features uuid_0_6_5_features ];
  tempdir_0_3_7 = { features?(tempdir_0_3_7_features {}) }: tempdir_0_3_7_ {
    dependencies = mapFeatures features ([ rand_0_4_2 remove_dir_all_0_5_1 ]);
  };
  tempdir_0_3_7_features = f: updateFeatures f (rec {
    rand_0_4_2.default = true;
    remove_dir_all_0_5_1.default = true;
    tempdir_0_3_7.default = (f.tempdir_0_3_7.default or true);
  }) [ rand_0_4_2_features remove_dir_all_0_5_1_features ];
  termios_0_3_0 = { features?(termios_0_3_0_features {}) }: termios_0_3_0_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ]);
  };
  termios_0_3_0_features = f: updateFeatures f (rec {
    libc_0_2_42.default = true;
    termios_0_3_0.default = (f.termios_0_3_0.default or true);
  }) [ libc_0_2_42_features ];
  thread_local_0_3_5 = { features?(thread_local_0_3_5_features {}) }: thread_local_0_3_5_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_2 unreachable_1_0_0 ]);
  };
  thread_local_0_3_5_features = f: updateFeatures f (rec {
    lazy_static_1_0_2.default = true;
    thread_local_0_3_5.default = (f.thread_local_0_3_5.default or true);
    unreachable_1_0_0.default = true;
  }) [ lazy_static_1_0_2_features unreachable_1_0_0_features ];
  time_0_1_40 = { features?(time_0_1_40_features {}) }: time_0_1_40_ {
    dependencies = mapFeatures features ([ libc_0_2_42 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  time_0_1_40_features = f: updateFeatures f (rec {
    libc_0_2_42.default = true;
    redox_syscall_0_1_40.default = true;
    time_0_1_40.default = (f.time_0_1_40.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwinbase = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntdef = true;
    winapi_0_3_5.profileapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.sysinfoapi = true;
    winapi_0_3_5.timezoneapi = true;
  }) [ libc_0_2_42_features redox_syscall_0_1_40_features winapi_0_3_5_features ];
  ucd_util_0_1_1 = { features?(ucd_util_0_1_1_features {}) }: ucd_util_0_1_1_ {};
  ucd_util_0_1_1_features = f: updateFeatures f (rec {
    ucd_util_0_1_1.default = (f.ucd_util_0_1_1.default or true);
  }) [];
  unicode_width_0_1_5 = { features?(unicode_width_0_1_5_features {}) }: unicode_width_0_1_5_ {
    features = mkFeatures (features.unicode_width_0_1_5 or {});
  };
  unicode_width_0_1_5_features = f: updateFeatures f (rec {
    unicode_width_0_1_5.default = (f.unicode_width_0_1_5.default or true);
  }) [];
  unicode_xid_0_0_4 = { features?(unicode_xid_0_0_4_features {}) }: unicode_xid_0_0_4_ {
    features = mkFeatures (features.unicode_xid_0_0_4 or {});
  };
  unicode_xid_0_0_4_features = f: updateFeatures f (rec {
    unicode_xid_0_0_4.default = (f.unicode_xid_0_0_4.default or true);
  }) [];
  unicode_xid_0_1_0 = { features?(unicode_xid_0_1_0_features {}) }: unicode_xid_0_1_0_ {
    features = mkFeatures (features.unicode_xid_0_1_0 or {});
  };
  unicode_xid_0_1_0_features = f: updateFeatures f (rec {
    unicode_xid_0_1_0.default = (f.unicode_xid_0_1_0.default or true);
  }) [];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  utf8_ranges_1_0_0 = { features?(utf8_ranges_1_0_0_features {}) }: utf8_ranges_1_0_0_ {};
  utf8_ranges_1_0_0_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_0.default = (f.utf8_ranges_1_0_0.default or true);
  }) [];
  uuid_0_6_5 = { features?(uuid_0_6_5_features {}) }: uuid_0_6_5_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_4 ]
      ++ (if features.uuid_0_6_5.rand or false then [ rand_0_4_2 ] else [])
      ++ (if features.uuid_0_6_5.serde or false then [ serde_1_0_70 ] else []));
    features = mkFeatures (features.uuid_0_6_5 or {});
  };
  uuid_0_6_5_features = f: updateFeatures f (rec {
    cfg_if_0_1_4.default = true;
    rand_0_4_2.default = true;
    serde_1_0_70.default = (f.serde_1_0_70.default or false);
    uuid_0_6_5.byteorder =
      (f.uuid_0_6_5.byteorder or false) ||
      (f.uuid_0_6_5.u128 or false) ||
      (uuid_0_6_5.u128 or false);
    uuid_0_6_5.default = (f.uuid_0_6_5.default or true);
    uuid_0_6_5.md5 =
      (f.uuid_0_6_5.md5 or false) ||
      (f.uuid_0_6_5.v3 or false) ||
      (uuid_0_6_5.v3 or false);
    uuid_0_6_5.nightly =
      (f.uuid_0_6_5.nightly or false) ||
      (f.uuid_0_6_5.const_fn or false) ||
      (uuid_0_6_5.const_fn or false);
    uuid_0_6_5.rand =
      (f.uuid_0_6_5.rand or false) ||
      (f.uuid_0_6_5.v3 or false) ||
      (uuid_0_6_5.v3 or false) ||
      (f.uuid_0_6_5.v4 or false) ||
      (uuid_0_6_5.v4 or false) ||
      (f.uuid_0_6_5.v5 or false) ||
      (uuid_0_6_5.v5 or false);
    uuid_0_6_5.sha1 =
      (f.uuid_0_6_5.sha1 or false) ||
      (f.uuid_0_6_5.v5 or false) ||
      (uuid_0_6_5.v5 or false);
    uuid_0_6_5.std =
      (f.uuid_0_6_5.std or false) ||
      (f.uuid_0_6_5.default or false) ||
      (uuid_0_6_5.default or false) ||
      (f.uuid_0_6_5.use_std or false) ||
      (uuid_0_6_5.use_std or false);
  }) [ cfg_if_0_1_4_features rand_0_4_2_features serde_1_0_70_features ];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_0_3_5 = { features?(winapi_0_3_5_features {}) }: winapi_0_3_5_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_5 or {});
  };
  winapi_0_3_5_features = f: updateFeatures f (rec {
    winapi_0_3_5.default = (f.winapi_0_3_5.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
  yaml_rust_0_4_0 = { features?(yaml_rust_0_4_0_features {}) }: yaml_rust_0_4_0_ {
    dependencies = mapFeatures features ([ linked_hash_map_0_5_1 ]);
  };
  yaml_rust_0_4_0_features = f: updateFeatures f (rec {
    linked_hash_map_0_5_1.default = true;
    yaml_rust_0_4_0.default = (f.yaml_rust_0_4_0.default or true);
  }) [ linked_hash_map_0_5_1_features ];
}
