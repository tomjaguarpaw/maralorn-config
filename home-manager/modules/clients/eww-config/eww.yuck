(deflisten status            :initial "[]" "bash scripts/listen.sh components")
(deflisten mode              :initial "warning"   "bash scripts/listen.sh mode")
(deflisten warnings          :initial "[]" "bash scripts/listen.sh warnings")
(deflisten warninggroups     :initial "[]" "bash scripts/listen.sh warninggroups")
(deflisten players           :initial "[]" "bash scripts/listen.sh players")
(deflisten workspaces        :initial "[]" "bash scripts/get-workspaces.sh")
(deflisten keymap            :initial "German (Neo 2)" "bash scripts/get-keymap.sh")
(deflisten current_workspace :initial "1" "bash scripts/get-active-workspace.sh")

(defpoll time :interval "5s" `date +'{"year":"%Y","month":"%m","day":"%d","week":"%V","week_day":"%a","hour":"%H","minute":"%M"}'`)
(defpoll alerts :interval "1m" :initial "[]" `curl https://alerts.maralorn.de/api/v1/alerts | jq '.data | map(select(.status.state != "suppressed"))'`)
(defpoll ssh-agent :interval "5s" "ssh-add -L")
(defpoll rbw :interval "5s" :initial false "if rbw unlocked; then echo true; else echo false; fi")

(defwidget workspaces []
  (box :orientation "horizontal"
    (label :text "${workspaces}${current_workspace}" :visible false)
    (for workspace in workspaces
      (box :class "component ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
        (label :text "${arraylength(workspaces) < 4 ? workspace.windows : ""}")
      )
    )
  )
)

(defwidget time []
  (box :class "component time" :orientation "vertical" :valign "end" :space-evenly false
    {formattime(EWW_TIME, "%F")}
    {formattime(EWW_TIME, "KW%V %a")}
    {formattime(EWW_TIME, "%H:%M")}
  )
)

(defwidget status []
  (box :orientation "vertical" :space-evenly false
    (label :text "${alerts}${rbw}${ssh-agent}${mode}${warnings}${warninggroups}${status}${players}" :visible false)
    (box :class "component" (image :path "icons/${mode}.png"))
    (box :orientation "vertical" :space-evenly false (for group in warninggroups
      (box :class "component" (image :path "icons/${group.name}.png") {group.count})
    ))
    (box :orientation "vertical" :space-evenly false (for alert in {mode != "Klausur" && arraylength(alerts) > 0 ? [1] : []}
      (box :class "component" (image :path "icons/cloud-alert.png") (label :text "${arraylength(alerts)}"))
    ))
    (box :orientation "vertical" :space-evenly false (for rbwfile in {rbw ? [] : [1]}
      (box :class "component" (image :path "icons/lock-alert.png") (label :text "rbw"))
    ))
    (box :orientation "vertical" :space-evenly false (for ssh in {ssh-agent == "" ? [1] : []}
      (box :class "component" (image :path "icons/lock-alert.png") (label :text "ssh"))
    ))
    (box :orientation "vertical" :space-evenly false (for keyboard in {keymap != "German (Neo 2)" ? [1] : []}
      (box :class "component small" (image :path "icons/keyboard.png") (label :text keymap))
    ))
  )
)

(defwidget bottom []
   (box :orientation "vertical" :space-evenly false :valign "end"
      (box :orientation "vertical" :space-evenly false (for message in status
        (box :style "color: #${message.color};" :class "component ${message.small ? "small" : ""}" :orientation "vertical"
          (for line in {message.content} (label :text "${line}"))
        ))
      )
     (workspaces)
     (time)
   )
)

(defwidget sidebar []
  (centerbox :orientation "vertical"
    (status)
    (box :orientation "vertical" :space-evenly false (for player in players
      (box :class "component" :orientation "vertical" :space-evenly false :spacing 10
        (box  :space-evenly false :spacing 10 (image :image-width 20 :image-height 20 :path "icons/${player.status}.png") (label :hexpand true :halign "center" :text {player.name}))
        (label :class "small" :width 100 :wrap true :justify "center" :text {player.title})
      )
    ))
    (bottom)
  )
)

(defwindow overlay
  :monitor 0
  :stacking "overlay"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "100%"
                      :anchor "top left")
  (info-overlay)
)

(defwidget info-overlay []
  (box :class "overlay"
    (centerbox :halign "center" :orientation "vertical"
      (box :orientation "vertical" :space-evenly false
        (for warning in {warnings}
          (box :class "component" :spacing 10 :space-evenly false
            (image :path "icons/${warning.group}.png")
            (for subgroup in {(warning.subgroup ?: "") != "" ? [warning.subgroup] : []}
              (image :path "icons/${subgroup}.png")
            )
            (label :hexpand true :halign "center" :text {warning.description}))
        )
        (for alert in {alerts}
          (box :class "component" :spacing 10 :space-evenly false (image :path "icons/cloud-alert.png") (label  :hexpand true :halign "center" :text {alert.annotations.description}))
        )
      )
      (box :class "component" :halign "center" (calendar))
      (box :orientation "vertical" :space-evenly false :valign "end"
        (box :class "component" :valign "end" :spacing 10 :space-evenly false
          (image :path "icons/disk.png")
          "RAM"
          "${round(EWW_RAM.used_mem/1024/1024/1024,1)}GB / ${round(EWW_RAM.total_mem/1024/1024/1024,1)}GB"
          (overlay :halign "end" :hexpand true
            (circular-progress :start-at 75 :width 60 :height 60 :thickness 4 :value {EWW_RAM.used_mem_perc})
            "${round(EWW_RAM.used_mem_perc,1)}%"
          )
        )
        (box :class "component" :valign "end" :spacing 10 :space-evenly false
          (image :path "icons/disk.png")
          "/disk"
          "${round(EWW_DISK["/disk"].used/1024/1024/1024,1)}GB / ${round(EWW_DISK["/disk"].total/1024/1024/1024,1)}GB"
          (overlay :halign "end" :hexpand true
            (circular-progress :start-at 75 :width 60 :height 60 :thickness 4 :value {EWW_DISK["/disk"].used_perc})
            "${round(EWW_DISK["/disk"].used_perc,1)}%"
          )
        )
      )
    )
  )
)

(defwindow bar
  :monitor 0
  :exclusive true
  :focusable false
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100px"
                      :height "100%"
                      :anchor "right center")
  (sidebar)
)
