name: Nix build
on:
  push:
    branches: ['*','!main']
run-name: Test and build flake
jobs:
  nix-eval:
    runs-on: nix
    outputs:
      jobs: ${{ steps.generate-matrix.outputs.jobs }}
    steps:
      - name: Set HOME
        run: echo "HOME=$(dirname $(pwd))" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: Configuring remote builders
        run: |
          mkdir -p ~/.config/nix
          cp $(builders-configurator) ~/.config/nix/machines
          echo "builders = @$(pwd)/.config/nix/machines" >> ~/.config/nix/nix.conf
      - name: Evaluate all jobs
        id: generate-matrix
        run: echo jobs="$(nix eval --json --log-format bar-with-logs -v -f ci.nix)" >> $GITHUB_OUTPUT
  output-test:
    runs-on: nix
    needs:
      - nix-eval
    steps:
      - name: Echo previous outputs
        run: echo '${{ needs.nix-eval.outputs.jobs }}'
  nix-build:
    runs-on: nix
    needs:
      - nix-eval
    strategy:
       matrix:
         job: 
           - check-pre-commit
           - nixos-apollo
           - nixos-athene
           - nixos-hephaistos
           - nixos-hera
           - nixos-zeus
    steps:
      - name: Set HOME
        run: echo "HOME=$(dirname $(pwd))" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: Configuring remote builders
        run: |
          mkdir -p ~/.config/nix
          cp $(builders-configurator) ~/.config/nix/machines
          echo "builders = @$(pwd)/.config/nix/machines" >> ~/.config/nix/nix.conf
      - run: echo $(jq -r '."${{ matrix.job }}"' <<< '${{ needs.nix-eval.outputs.jobs }}')
      - run: nix-build $(jq -r '."${{ matrix.job }}"' <<< '${{ needs.nix-eval.outputs.jobs }}')
      - run: archive-nix-path
